{"name":"Colore","tagline":"A powerful C# library for Razer Chroma's SDK","body":"Colore\r\n======\r\n\r\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](http://opensource.org/licenses/MIT)\r\n[![GitHub release version](https://img.shields.io/github/release/CoraleStudios/Colore.svg)](https://github.com/CoraleStudios/Colore/releases)\r\n[![NuGet version](https://img.shields.io/nuget/v/Colore.svg)](https://www.nuget.org/packages/Colore)\r\n[![NuGet downloads](https://img.shields.io/nuget/dt/Colore.svg)](https://www.nuget.org/packages/Colore)\r\n\r\n**Develop:**\r\n[![Build status](https://ci.appveyor.com/api/projects/status/86g99rkyhc57sa74?svg=true)](https://ci.appveyor.com/project/Corale/colore)\r\n[![Coverage Status](https://coveralls.io/repos/CoraleStudios/Colore/badge.svg?branch=develop)](https://coveralls.io/r/CoraleStudios/Colore?branch=develop)\r\n\r\n**Master:**\r\n[![Master build status](https://ci.appveyor.com/api/projects/status/86g99rkyhc57sa74/branch/master?svg=true)](https://ci.appveyor.com/project/Corale/colore/branch/master)\r\n[![Master coverage Status](https://coveralls.io/repos/CoraleStudios/Colore/badge.svg?branch=develop)](https://coveralls.io/r/CoraleStudios/Colore?branch=master)\r\n\r\nA powerful and elegant C# library for Razer Chroma's SDK\r\n\r\nContributing\r\n------------\r\n\r\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/CoraleStudios/Colore?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\r\n\r\n*For discussing, you can join the Gitter chat using the badge above. If you want to join the Slack chat, contact [Brandon Scott][bs] ([brandon@brandonscott.co.uk](mailto:brandon@brandonscott.co.uk)) or [Adam Hellberg][sharp] ([sharparam@sharparam.com](mailto:sharparam@sharparam.com)).*\r\n\r\nContributors are very welcome! If you got code fixes, please [submit a pull request][newpull] here on GitHub.\r\n\r\nIf you want to join the development team, please contact [Sharparam][sharp] or [Brandon][bs] on GitHub.\r\n\r\nAll authors and contributors are listed in the **AUTHORS** file.\r\n\r\nPlease read the [CONTRIBUTING.md](CONTRIBUTING.md) file before making a pull request.\r\n\r\nQuestions, feedback, bug reports...\r\n-----------------------------------\r\n\r\nGot a question or found a bug somewhere? Please [create a new issue](https://github.com/CoraleStudios/Colore/issues/new) and tell us about it!\r\n\r\nYou may send in feedback through email as well, but the issues page is preferred as it makes it easier for the development team to organise things!\r\n\r\nLicense\r\n-------\r\n\r\nCopyright &copy; 2015 by [Adam Hellberg][sharp] and [Brandon Scott][bs].\r\n\r\nThis project is licensed under the MIT license, please see the file **LICENSE** for more information.\r\n\r\nRazer is a trademark and/or a registered trademark of Razer USA Ltd.  \r\nAll other trademarks are property of their respective owners.\r\n\r\nThis project is in no way endorsed, sponsored or approved by Razer.\r\n\r\nDependencies\r\n------------\r\n\r\nColore depends on the Razer Chroma SDK (RzChromaSDK64.dll or RzChromaSDK.dll).\r\n\r\nThe Razer Chroma SDK is provided by Razer and [can be obtained from their website][rzdev].\r\n\r\nBuilding\r\n--------\r\n\r\nIt's important to note that the platform under which this project is built plays a huge role on the usability of the library.\r\n\r\nWhen compiling with the x86 or x64 platform set in build configuration, Colore will **only work on the respective system platform**\r\n(32-bit if compiled using x86, and 64-bit if compiled using x64).\r\n\r\nThe native methods are imported using `DllImport` when Colore is compiled in x86 or x64, which is why the setting matters for deployment,\r\nas this cannot be changed at runtime.\r\n\r\nHowever, if compiling with the \"Any CPU\" configuration, Colore will dynamically load functions relevant for the current executing platform,\r\nmaking it run on both 32- and 64-bit systems without any work having to be done by the dev.\r\n\r\nFor non-performance critical applications, the \"Any CPU\" mode should be fine (this is also what the NuGet package is compiled against).\r\n\r\nFor applications that require peak performance, we recommend shipping separate 32- and 64-bit builds of your application, using the relevant build configurations in Colore.\r\n\r\nThe below example compiles Colore in Release mode for the x86 (32-bit) platform.\r\n\r\n```\r\nmsbuild Colore.sln /p:Configuration=Release;Platform=x86\r\n```\r\n\r\n(Replace `x86` with `x64` if compiling for Win64, or `\"Any CPU\"` if compiling cross-platform)\r\n\r\nMake sure that your projects using Colore are also compiled against a matching platform.\r\n\r\nRazer's SDK installer **will only install the library relevant for your platform**.\r\n\r\nThis means that your apps will need to be compiled twice, once for x86 platforms, and once for x64, unless you are using \"Any CPU\".\r\nThey must both be provided when you distribute your application, depending on what platform the user has.\r\n\r\nProjects\r\n--------\r\n\r\nCurrent projects utilizing this or modified versions of this library:\r\n\r\n*None right now!*\r\n\r\n(If you want your project listed, just contact [Sharparam][sharp] or [Brandon][bs])\r\n\r\n[newpull]: ../../pull/new/develop\r\n[sharp]: https://github.com/Sharparam\r\n[contrib]: ../../wiki/Contributing\r\n[bs]: https://github.com/brandonscott\r\n[rzdev]: http://developer.razerzone.com/chroma\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}